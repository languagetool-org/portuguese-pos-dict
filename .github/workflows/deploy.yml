# This workflow is DEPRECATED. Both deployment and building are now handled in the Build workflow as separate jobs.
name: Deploy

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      runid:
        type: string
        description: "The ID of the workflow run to download artefacts from"
        required: true
        # TODO: remove hardcoded id!
        default: "7802717092"

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'workflow_run' &&
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main' &&
      github.event.workflow_run.event == 'push') ||
      github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Necessary since downloading artefacts with an 'overwrite' option is not supported
    - name: Empty out src directory
      run: rm -rf results/java-lt/src/*

    - name: Download artefact from upstream workflow
      if: github.event_name == 'workflow_run'
      uses: actions/download-artifact@v4
      with:
        name: src
        path: results/java-lt/src/
        run-id: ${{ github.event.workflow_run.id }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Debug run ID
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "Run ID: ${{ github.event.inputs.runid }}"

    - name: Download artefact from custom workflow
      if: github.event_name == 'workflow_dispatch'
      uses: actions/download-artifact@v4
      with:
        name: src
        path: results/java-lt/src/
        run-id: ${{ github.event.inputs.runid }}
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set dictionary version
      # TODO: remove 'test-' prefix!
      run: echo "PT_DICT_VERSION=test-$(git describe --tags --abbrev=0 | sed 's/^v//g')" >> $GITHUB_ENV

    - name: Set up JDK 11 for x64
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        architecture: x64

    - name: Import GPG Key
      run: echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import

    - name: Deploy to SonaType
      env:
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      working-directory: results/java-lt
      run: mvn clean deploy -P release -s ${{ github.workspace }}/results/java-lt/settings.xml
